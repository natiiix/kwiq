{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/interpreter.ts","src/keyCodes.ts","src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Interpreter","cbLog","split","forEach","line","toString","keyCodes","interpreter_1","keyCodes_1","elemCode","document","getElementById","elemConsole","elemSaveButton","keyStates","isKeyDown","keyCode","keyState","undefined","_typeof","getKeyCode","which","hasKeyCode","appendConsole","text","value","scrollTop","scrollHeight","addEventListener","F5","preventDefault","Promise","resolve","reject","interpret","then","catch","KEY_S","ctrlKey","click","TAB","oldValue","start","selectionStart","end","selectionEnd","substring","setAttribute","encodeURIComponent"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","export class Interpreter {\r\n    public interpret(code: string, cbLog: (text: string) => void): void {\r\n        let n: number = 0;\r\n        code.split(\"\\n\").forEach((line: string) => cbLog((n++).toString() + \" | \" + line));\r\n    }\r\n}\r\n","// Source: https://gist.github.com/kyranjamie/b9fca0c2cb82588bd492b6ee59ed239b\r\n\r\nexport enum keyCodes {\r\n    BACKSPACE = 8,\r\n    TAB = 9,\r\n    ENTER = 13,\r\n    SHIFT = 16,\r\n    CTRL = 17,\r\n    ALT = 18,\r\n    PAUSE = 19,\r\n    CAPS_LOCK = 20,\r\n    ESCAPE = 27,\r\n    SPACE = 32,\r\n    PAGE_UP = 33,\r\n    PAGE_DOWN = 34,\r\n    END = 35,\r\n    HOME = 36,\r\n    LEFT_ARROW = 37,\r\n    UP_ARROW = 38,\r\n    RIGHT_ARROW = 39,\r\n    DOWN_ARROW = 40,\r\n    INSERT = 45,\r\n    DELETE = 46,\r\n    KEY_0 = 48,\r\n    KEY_1 = 49,\r\n    KEY_2 = 50,\r\n    KEY_3 = 51,\r\n    KEY_4 = 52,\r\n    KEY_5 = 53,\r\n    KEY_6 = 54,\r\n    KEY_7 = 55,\r\n    KEY_8 = 56,\r\n    KEY_9 = 57,\r\n    KEY_A = 65,\r\n    KEY_B = 66,\r\n    KEY_C = 67,\r\n    KEY_D = 68,\r\n    KEY_E = 69,\r\n    KEY_F = 70,\r\n    KEY_G = 71,\r\n    KEY_H = 72,\r\n    KEY_I = 73,\r\n    KEY_J = 74,\r\n    KEY_K = 75,\r\n    KEY_L = 76,\r\n    KEY_M = 77,\r\n    KEY_N = 78,\r\n    KEY_O = 79,\r\n    KEY_P = 80,\r\n    KEY_Q = 81,\r\n    KEY_R = 82,\r\n    KEY_S = 83,\r\n    KEY_T = 84,\r\n    KEY_U = 85,\r\n    KEY_V = 86,\r\n    KEY_W = 87,\r\n    KEY_X = 88,\r\n    KEY_Y = 89,\r\n    KEY_Z = 90,\r\n    LEFT_META = 91,\r\n    RIGHT_META = 92,\r\n    SELECT = 93,\r\n    NUMPAD_0 = 96,\r\n    NUMPAD_1 = 97,\r\n    NUMPAD_2 = 98,\r\n    NUMPAD_3 = 99,\r\n    NUMPAD_4 = 100,\r\n    NUMPAD_5 = 101,\r\n    NUMPAD_6 = 102,\r\n    NUMPAD_7 = 103,\r\n    NUMPAD_8 = 104,\r\n    NUMPAD_9 = 105,\r\n    MULTIPLY = 106,\r\n    ADD = 107,\r\n    SUBTRACT = 109,\r\n    DECIMAL = 110,\r\n    DIVIDE = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NUM_LOCK = 144,\r\n    SCROLL_LOCK = 145,\r\n    SEMICOLON = 186,\r\n    EQUALS = 187,\r\n    COMMA = 188,\r\n    DASH = 189,\r\n    PERIOD = 190,\r\n    FORWARD_SLASH = 191,\r\n    GRAVE_ACCENT = 192,\r\n    OPEN_BRACKET = 219,\r\n    BACK_SLASH = 220,\r\n    CLOSE_BRACKET = 221,\r\n    SINGLE_QUOTE = 222,\r\n}\r\n","import { Interpreter } from \"./interpreter\";\r\nimport { keyCodes } from \"./keyCodes\";\r\n\r\nconst elemCode: HTMLTextAreaElement = document.getElementById(\"code\") as HTMLTextAreaElement;\r\nconst elemConsole: HTMLTextAreaElement = document.getElementById(\"console\") as HTMLTextAreaElement;\r\nconst elemSaveButton: HTMLElement = document.getElementById(\"buttonSave\");\r\n\r\nconst keyStates: { [id: number]: boolean } = {};\r\n\r\nfunction isKeyDown(keyCode: number): boolean {\r\n    const keyState: undefined | boolean = keyStates[keyCode];\r\n    return typeof keyState !== undefined && keyState;\r\n}\r\n\r\nfunction getKeyCode(e: KeyboardEvent): number {\r\n    return e.which || e.keyCode;\r\n}\r\n\r\nfunction hasKeyCode(e: KeyboardEvent, keyCode: number): boolean {\r\n    return getKeyCode(e) === keyCode;\r\n}\r\n\r\nfunction appendConsole(text: string): void {\r\n    if (elemConsole.value.length) {\r\n        elemConsole.value += \"\\n\" + text;\r\n    } else {\r\n        elemConsole.value = text;\r\n    }\r\n\r\n    elemConsole.scrollTop = elemConsole.scrollHeight;\r\n}\r\n\r\nfunction interpretAsync(code: string, cbLog: (text: string) => void): void {\r\n    (new Promise((resolve: () => void, reject: () => void): void => {\r\n        appendConsole(\"Interpreting...\");\r\n\r\n        if ((new Interpreter()).interpret(code, cbLog)) {\r\n            resolve();\r\n        } else {\r\n            reject();\r\n        }\r\n    }))\r\n        .then(() => cbLog(\"Done!\"))\r\n        .catch(() => cbLog(\"Error!\"));\r\n}\r\n\r\nelemCode.addEventListener(\"keydown\", (e: KeyboardEvent): void => {\r\n    if (hasKeyCode(e, keyCodes.F5)) {\r\n        e.preventDefault();\r\n\r\n        if (!isKeyDown(keyCodes.F5)) {\r\n            interpretAsync(elemCode.value, appendConsole);\r\n        }\r\n    } else if (hasKeyCode(e, keyCodes.KEY_S)) {\r\n        if (e.ctrlKey) {\r\n            e.preventDefault();\r\n\r\n            if (!isKeyDown(keyCodes.KEY_S)) {\r\n                elemSaveButton.click();\r\n            }\r\n        }\r\n    } else if (hasKeyCode(e, keyCodes.TAB)) {\r\n        e.preventDefault();\r\n\r\n        const tabValue: string = \"    \";\r\n\r\n        const oldValue: string = elemCode.value;\r\n        const start: number = elemCode.selectionStart;\r\n        const end: number = elemCode.selectionEnd;\r\n\r\n        elemCode.value = oldValue.substring(0, start) + tabValue + oldValue.substring(end, oldValue.length);\r\n        elemCode.selectionEnd = elemCode.selectionStart = start + tabValue.length;\r\n    }\r\n\r\n    keyStates[getKeyCode(e)] = true;\r\n});\r\n\r\nelemCode.addEventListener(\"keyup\", (e: KeyboardEvent): void => {\r\n    if (hasKeyCode(e, keyCodes.F5)) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    keyStates[getKeyCode(e)] = false;\r\n});\r\n\r\nelemSaveButton.addEventListener(\"click\", (e: MouseEvent) => {\r\n    elemSaveButton.setAttribute(\"href\", \"data:;charset=utf-8,\" + encodeURIComponent(elemCode.value));\r\n});\r\n"]}